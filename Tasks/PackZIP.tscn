[gd_scene load_steps=3 format=3 uid="uid://dw4t3o5hj774w"]

[ext_resource type="PackedScene" uid="uid://cyl1d6reu3mk4" path="res://Nodes/GUI/DirectorySelector.tscn" id="1_smuq5"]

[sub_resource type="GDScript" id="GDScript_ess8h"]
script/source = "extends \"ScriptTask.gd\"

@onready var source_directory: Control = %SourceDirectory
@onready var target_path: Control = %TargetPath
@onready var file_filter: LineEdit = %FileFilter
@onready var file_filter2: LineEdit = %FileFilter2

func _get_task_name() -> String:
	return \"Pack ZIP\"

func _get_execute_string() -> String:
	return \"Pack folder \\\"%s\\\" into \\\"%s\\\"\" % [source_directory.text.get_file(), target_path.text.get_file()]

func _initialize() -> void:
	defaults[\"source\"] = \"\"
	defaults[\"destination\"] = \"\"
	defaults[\"include_files\"] = \"\"
	defaults[\"exclude_files\"] = \"\"

func _validate() -> bool:
	var path := Data.resolve_path(source_directory.text)
	if not DirAccess.dir_exists_absolute(path):
		error_message = \"Source directory (%s) does not exist.\" % path
		return false
	
	return true

func _get_arguments() -> PackedStringArray:
	var ret := super()
	
	ret.append(Data.resolve_path(source_directory.text))
	ret.append(Data.resolve_path(target_path.text))
	
	if not file_filter.text.is_empty():
		ret.append(\"--include\")
		ret.append_array(file_filter.text.split(\" \"))
	if not file_filter2.text.is_empty():
		ret.append(\"--exclude\")
		ret.append_array(file_filter2.text.split(\" \"))
	
	return ret

func _load():
	source_directory.text = data[\"source\"]
	target_path.text = data[\"destination\"]
	file_filter.text = data[\"include_files\"]
	file_filter2.text = data[\"exclude_files\"]

func _store():
	data[\"source\"] = source_directory.text
	data[\"destination\"] = target_path.text
	data[\"include_files\"] = file_filter.text
	data[\"exclude_files\"] = file_filter2.text

func _get_task_info() -> PackedStringArray:
	return [
		\"Packs specified files in a ZIP archive.\",
		\"Source Directory|Files from this directory will be packed.\",
		\"Target File Path|Path of the target ZIP archive.\",
		\"Include Files|List of filters for files from the directory. Example: \\\"*.exe *.pck\\\". If empty, all files will be packed. Otherwise only files that match the filter will be included.\",
		\"Exclude Files|Filters files from the directory. Files that match this filter will be excluded.\",
	]
"

[node name="MakeZip" type="VBoxContainer"]
offset_right = 734.0
offset_bottom = 101.0
script = SubResource("GDScript_ess8h")
script_name = "PackZIP.gd"

[node name="GridContainer" type="GridContainer" parent="."]
layout_mode = 2
columns = 2

[node name="Label2" type="Label" parent="GridContainer"]
custom_minimum_size = Vector2(150, 0)
layout_mode = 2
size_flags_horizontal = 8
text = "Source Directory"
horizontal_alignment = 2

[node name="SourceDirectory" parent="GridContainer" instance=ExtResource("1_smuq5")]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
scope = 1
missing_mode = 1

[node name="Label3" type="Label" parent="GridContainer"]
layout_mode = 2
size_flags_horizontal = 8
text = "Target File Path"
horizontal_alignment = 2

[node name="TargetPath" parent="GridContainer" instance=ExtResource("1_smuq5")]
unique_name_in_owner = true
auto_translate_mode = 1
layout_mode = 2
size_flags_horizontal = 3
mode = 2
scope = 1
filters = PackedStringArray("*.zip")

[node name="Label" type="Label" parent="GridContainer"]
layout_mode = 2
size_flags_horizontal = 8
text = "Include Files"
horizontal_alignment = 2

[node name="FileFilter" type="LineEdit" parent="GridContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
placeholder_text = "Space-separated list of filters, e.g. \"*.exe\". Leave empty to include all."

[node name="Label4" type="Label" parent="GridContainer"]
auto_translate_mode = 1
layout_mode = 2
size_flags_horizontal = 8
text = "Exclude Files"
horizontal_alignment = 2

[node name="FileFilter2" type="LineEdit" parent="GridContainer"]
unique_name_in_owner = true
auto_translate_mode = 1
layout_mode = 2
size_flags_horizontal = 3
placeholder_text = "Space-separated list of filters. Leave empty to exclude none."
